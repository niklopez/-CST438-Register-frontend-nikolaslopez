{"ast":null,"code":"var _jsxFileName = \"/Users/nikolaslopez/frontend/src/components/AdminHome.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport EditStudent from './EditStudent';\nimport { SERVER_URL } from '../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminHome = () => {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [newStudentName, setNewStudentName] = useState('');\n  const [newStudentEmail, setNewStudentEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [editedStudent, setEditedStudent] = useState(null);\n  useEffect(() => {\n    fetchStudents();\n  }, []);\n  /*\n   *  GET students that currently exsist\n   */\n  const fetchStudents = () => {\n    fetch('http://localhost:8080/student').then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch students');\n      }\n      return response.json();\n    }).then(data => {\n      setStudents(data);\n    }).catch(err => {\n      console.error('Error fetching students:', err.message);\n      setMessage('Failed to fetch students. ' + err.message);\n    });\n  };\n  /*\n  *  add student\n  */\n\n  const handleAddStudent = () => {\n    const emailFormat = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n    if (!emailFormat.test(newStudentEmail)) {\n      setMessage('Must be a Valid Email');\n      return;\n    }\n    if (students.some(student => student.email === newStudentEmail)) {\n      setMessage('Email Already in Use');\n      return;\n    }\n    const nextStudentId = students.length + 1;\n    const newStudent = {\n      studentId: nextStudentId,\n      name: newStudentName,\n      email: newStudentEmail,\n      statusCode: 0,\n      status: null\n    };\n    setStudents([...students, newStudent]);\n    setNewStudentName('');\n    setNewStudentEmail('');\n    setMessage('');\n  };\n  /* \n   *   remove a student\n   */\n  const handleDeleteStudent = studentId => {\n    const studentIndex = students.findIndex(student => student.studentId === studentId);\n    if (studentIndex === -1) {\n      // Student not found\n      setMessage('Student not found.');\n      return;\n    }\n    if (window.confirm('Are you sure you want to delete the student')) {\n      fetch(`${SERVER_URL}/student/${studentId}`, {\n        method: 'DELETE'\n      }).then(res => {\n        if (res.ok || res.status === 400) {\n          console.log('Delete successful');\n          const updatedStudents = [...students];\n          updatedStudents.splice(studentIndex, 1);\n          setStudents(updatedStudents);\n          setMessage('Student deleted.');\n        } else {\n          // Delete error\n          console.log('Delete error:', res.status);\n          setMessage('Error deleting student. ' + res.status);\n        }\n      }).catch(err => {\n        // Exception/error during fetch\n        console.error('Exception:', err);\n        setMessage('Exception. ' + err.message);\n      });\n    }\n  };\n\n  //Utlizes Edit Student\n\n  const handleEditStudent = student => {\n    setEditedStudent(student);\n  };\n  const handleEditSubmit = editedStudentData => {\n    const index = students.findIndex(student => student.studentId === editedStudentData.studentId);\n    if (index !== -1) {\n      // Create a new array with the edited student data\n      const updatedStudents = [...students];\n      updatedStudents[index] = editedStudentData;\n\n      // Update the students state with the new array\n      setStudents(updatedStudents);\n      setMessage('Student Update');\n    }\n\n    // You can also close the edit form if needed\n    setEditedStudent(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Student List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: students.map(student => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [student.name, \" (\", student.email, \")\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditStudent(student),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)]\n      }, student.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditStudentModal, {\n      student: editedStudent,\n      onCancel: () => setIsModalOpen(false),\n      onEdit: handleEditSubmit,\n      onDelete: handleDeleteStudent,\n      isOpen: isModalOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminHome, \"+zShtihA14xLsLJtuJ1Ysf65e3k=\");\n_c = AdminHome;\nexport default AdminHome;\nvar _c;\n$RefreshReg$(_c, \"AdminHome\");","map":{"version":3,"names":["React","useState","useEffect","EditStudent","SERVER_URL","jsxDEV","_jsxDEV","AdminHome","_s","students","setStudents","newStudentName","setNewStudentName","newStudentEmail","setNewStudentEmail","message","setMessage","editedStudent","setEditedStudent","fetchStudents","fetch","then","response","ok","Error","json","data","catch","err","console","error","handleAddStudent","emailFormat","test","some","student","email","nextStudentId","length","newStudent","studentId","name","statusCode","status","handleDeleteStudent","studentIndex","findIndex","window","confirm","method","res","log","updatedStudents","splice","handleEditStudent","handleEditSubmit","editedStudentData","index","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","id","EditStudentModal","onCancel","setIsModalOpen","onEdit","onDelete","isOpen","isModalOpen","_c","$RefreshReg$"],"sources":["/Users/nikolaslopez/frontend/src/components/AdminHome.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport EditStudent from './EditStudent';\nimport {SERVER_URL} from '../constants';\nconst AdminHome = () => {\n  const [students, setStudents] = useState([]);\n  const [newStudentName, setNewStudentName] = useState('');\n  const [newStudentEmail, setNewStudentEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [editedStudent, setEditedStudent] = useState(null);\n  \n\n  useEffect(() => {\n    fetchStudents();\n  }, []);\n  /*\n   *  GET students that currently exsist\n   */ \n  const fetchStudents = () => {\n\n    fetch('http://localhost:8080/student')\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Failed to fetch students');\n        }\n        return response.json();\n      })\n      .then((data) => {\n        setStudents(data);\n      })\n      .catch((err) => {\n        console.error('Error fetching students:', err.message);\n        setMessage('Failed to fetch students. ' + err.message);\n      });\n  };\n   /*\n  *  add student\n  */ \n\n  const handleAddStudent = () => {\n    const emailFormat = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n\n    if (!emailFormat.test(newStudentEmail)) {\n      setMessage('Must be a Valid Email');\n      return;\n    }\n\n    if (students.some((student) => student.email === newStudentEmail)) {\n      setMessage('Email Already in Use');\n      return;\n    }\n\n    const nextStudentId = students.length + 1;\n\n    const newStudent = {\n      studentId: nextStudentId,\n      name: newStudentName,\n      email: newStudentEmail,\n      statusCode: 0, \n      status: null, \n    };\n\n    setStudents([...students, newStudent]);\n\n    setNewStudentName('');\n    setNewStudentEmail('');\n\n    setMessage('');\n  };\n  /* \n   *   remove a student\n   */ \n  const handleDeleteStudent = (studentId) => {\n    const studentIndex = students.findIndex((student) => student.studentId === studentId);\n  \n    if (studentIndex === -1) {\n      // Student not found\n      setMessage('Student not found.');\n      return;\n    }\n  \n    if (window.confirm('Are you sure you want to delete the student')) {\n      fetch(`${SERVER_URL}/student/${studentId}`, {\n        method: 'DELETE',\n      })\n        .then((res) => {\n          if (res.ok||res.status === 400) {\n            console.log('Delete successful');\n  \n            const updatedStudents = [...students];\n            updatedStudents.splice(studentIndex, 1);\n  \n            setStudents(updatedStudents);\n            setMessage('Student deleted.');\n          } else {\n            // Delete error\n            console.log('Delete error:', res.status);\n            setMessage('Error deleting student. ' + res.status);\n          }\n        })\n        .catch((err) => {\n          // Exception/error during fetch\n          console.error('Exception:', err);\n          setMessage('Exception. ' + err.message);\n        });\n    }\n  };\n  \n  \n  \n  //Utlizes Edit Student\n  \n\n  const handleEditStudent = (student) => {\n    setEditedStudent(student);\n  };\n\n  const handleEditSubmit = (editedStudentData) => {\n    const index = students.findIndex((student) => student.studentId === editedStudentData.studentId);\n\n    if (index !== -1) {\n      // Create a new array with the edited student data\n      const updatedStudents = [...students];\n      updatedStudents[index] = editedStudentData;\n\n      // Update the students state with the new array\n      setStudents(updatedStudents);\n      setMessage('Student Update');\n\n    }\n\n    // You can also close the edit form if needed\n    setEditedStudent(null);\n\n  };\n\n  return (\n    <div>\n      <h1>Student List</h1>\n      <ul>\n        {students.map((student) => (\n          <li key={student.id}>\n            {student.name} ({student.email})\n            <button onClick={() => handleEditStudent(student)}>Edit</button>\n          </li>\n        ))}\n      </ul>\n\n      <EditStudentModal\n        student={editedStudent}\n        onCancel={() => setIsModalOpen(false)}\n        onEdit={handleEditSubmit}\n        onDelete={handleDeleteStudent}\n        isOpen={isModalOpen}\n      />\n    </div>\n  );\n}\n\n\nexport default AdminHome;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,SAAQC,UAAU,QAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACxC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACY,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAGxDC,SAAS,CAAC,MAAM;IACdiB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EACN;AACF;AACA;EACE,MAAMA,aAAa,GAAGA,CAAA,KAAM;IAE1BC,KAAK,CAAC,+BAA+B,CAAC,CACnCC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACdhB,WAAW,CAACgB,IAAI,CAAC;IACnB,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;MACdC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEF,GAAG,CAACb,OAAO,CAAC;MACtDC,UAAU,CAAC,4BAA4B,GAAGY,GAAG,CAACb,OAAO,CAAC;IACxD,CAAC,CAAC;EACN,CAAC;EACA;AACH;AACA;;EAEE,MAAMgB,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,WAAW,GAAG,iDAAiD;IAErE,IAAI,CAACA,WAAW,CAACC,IAAI,CAACpB,eAAe,CAAC,EAAE;MACtCG,UAAU,CAAC,uBAAuB,CAAC;MACnC;IACF;IAEA,IAAIP,QAAQ,CAACyB,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACC,KAAK,KAAKvB,eAAe,CAAC,EAAE;MACjEG,UAAU,CAAC,sBAAsB,CAAC;MAClC;IACF;IAEA,MAAMqB,aAAa,GAAG5B,QAAQ,CAAC6B,MAAM,GAAG,CAAC;IAEzC,MAAMC,UAAU,GAAG;MACjBC,SAAS,EAAEH,aAAa;MACxBI,IAAI,EAAE9B,cAAc;MACpByB,KAAK,EAAEvB,eAAe;MACtB6B,UAAU,EAAE,CAAC;MACbC,MAAM,EAAE;IACV,CAAC;IAEDjC,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE8B,UAAU,CAAC,CAAC;IAEtC3B,iBAAiB,CAAC,EAAE,CAAC;IACrBE,kBAAkB,CAAC,EAAE,CAAC;IAEtBE,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EACD;AACF;AACA;EACE,MAAM4B,mBAAmB,GAAIJ,SAAS,IAAK;IACzC,MAAMK,YAAY,GAAGpC,QAAQ,CAACqC,SAAS,CAAEX,OAAO,IAAKA,OAAO,CAACK,SAAS,KAAKA,SAAS,CAAC;IAErF,IAAIK,YAAY,KAAK,CAAC,CAAC,EAAE;MACvB;MACA7B,UAAU,CAAC,oBAAoB,CAAC;MAChC;IACF;IAEA,IAAI+B,MAAM,CAACC,OAAO,CAAC,6CAA6C,CAAC,EAAE;MACjE5B,KAAK,CAAE,GAAEhB,UAAW,YAAWoC,SAAU,EAAC,EAAE;QAC1CS,MAAM,EAAE;MACV,CAAC,CAAC,CACC5B,IAAI,CAAE6B,GAAG,IAAK;QACb,IAAIA,GAAG,CAAC3B,EAAE,IAAE2B,GAAG,CAACP,MAAM,KAAK,GAAG,EAAE;UAC9Bd,OAAO,CAACsB,GAAG,CAAC,mBAAmB,CAAC;UAEhC,MAAMC,eAAe,GAAG,CAAC,GAAG3C,QAAQ,CAAC;UACrC2C,eAAe,CAACC,MAAM,CAACR,YAAY,EAAE,CAAC,CAAC;UAEvCnC,WAAW,CAAC0C,eAAe,CAAC;UAC5BpC,UAAU,CAAC,kBAAkB,CAAC;QAChC,CAAC,MAAM;UACL;UACAa,OAAO,CAACsB,GAAG,CAAC,eAAe,EAAED,GAAG,CAACP,MAAM,CAAC;UACxC3B,UAAU,CAAC,0BAA0B,GAAGkC,GAAG,CAACP,MAAM,CAAC;QACrD;MACF,CAAC,CAAC,CACDhB,KAAK,CAAEC,GAAG,IAAK;QACd;QACAC,OAAO,CAACC,KAAK,CAAC,YAAY,EAAEF,GAAG,CAAC;QAChCZ,UAAU,CAAC,aAAa,GAAGY,GAAG,CAACb,OAAO,CAAC;MACzC,CAAC,CAAC;IACN;EACF,CAAC;;EAID;;EAGA,MAAMuC,iBAAiB,GAAInB,OAAO,IAAK;IACrCjB,gBAAgB,CAACiB,OAAO,CAAC;EAC3B,CAAC;EAED,MAAMoB,gBAAgB,GAAIC,iBAAiB,IAAK;IAC9C,MAAMC,KAAK,GAAGhD,QAAQ,CAACqC,SAAS,CAAEX,OAAO,IAAKA,OAAO,CAACK,SAAS,KAAKgB,iBAAiB,CAAChB,SAAS,CAAC;IAEhG,IAAIiB,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB;MACA,MAAML,eAAe,GAAG,CAAC,GAAG3C,QAAQ,CAAC;MACrC2C,eAAe,CAACK,KAAK,CAAC,GAAGD,iBAAiB;;MAE1C;MACA9C,WAAW,CAAC0C,eAAe,CAAC;MAC5BpC,UAAU,CAAC,gBAAgB,CAAC;IAE9B;;IAEA;IACAE,gBAAgB,CAAC,IAAI,CAAC;EAExB,CAAC;EAED,oBACEZ,OAAA;IAAAoD,QAAA,gBACEpD,OAAA;MAAAoD,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBxD,OAAA;MAAAoD,QAAA,EACGjD,QAAQ,CAACsD,GAAG,CAAE5B,OAAO,iBACpB7B,OAAA;QAAAoD,QAAA,GACGvB,OAAO,CAACM,IAAI,EAAC,IAAE,EAACN,OAAO,CAACC,KAAK,EAAC,GAC/B,eAAA9B,OAAA;UAAQ0D,OAAO,EAAEA,CAAA,KAAMV,iBAAiB,CAACnB,OAAO,CAAE;UAAAuB,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAFzD3B,OAAO,CAAC8B,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAELxD,OAAA,CAAC4D,gBAAgB;MACf/B,OAAO,EAAElB,aAAc;MACvBkD,QAAQ,EAAEA,CAAA,KAAMC,cAAc,CAAC,KAAK,CAAE;MACtCC,MAAM,EAAEd,gBAAiB;MACzBe,QAAQ,EAAE1B,mBAAoB;MAC9B2B,MAAM,EAAEC;IAAY;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAAtD,EAAA,CAzJKD,SAAS;AAAAkE,EAAA,GAATlE,SAAS;AA4Jf,eAAeA,SAAS;AAAC,IAAAkE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}