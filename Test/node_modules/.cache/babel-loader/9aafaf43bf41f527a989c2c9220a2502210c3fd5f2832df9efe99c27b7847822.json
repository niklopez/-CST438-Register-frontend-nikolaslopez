{"ast":null,"code":"var _jsxFileName = \"/Users/nikolaslopez/frontend/src/components/AdminHome.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminHome = () => {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [newStudentName, setNewStudentName] = useState('');\n  const [newStudentEmail, setNewStudentEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [selectedStudentId, setSelectedStudentId] = useState(null);\n  useEffect(() => {\n    // Called once after initial render\n    fetchStudents();\n  }, []);\n  const fetchStudents = studentId => {\n    const endpoint = `http://localhost:8080/student?studentId=${studentId}`;\n    fetch(endpoint).then(response => response.json()).then(data => {\n      setStudents(data); // Update the state with the fetched data\n    }).catch(err => {\n      console.log(\"exception fetchStudents \" + err);\n      // Handle the error here, for example, by displaying an error message to the user.\n      // You might have a function like setMessage to handle this.\n      setMessage(\"Exception. \" + err);\n    });\n  };\n  const handleAddStudent = () => {\n    // Validate the email format\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(newStudentEmail)) {\n      setMessage('Invalid email format');\n      return;\n    }\n\n    // Check if the email is unique\n    const isEmailUnique = students.every(student => student.email !== newStudentEmail);\n    if (!isEmailUnique) {\n      setMessage('Email already exists');\n      return;\n    }\n\n    // If email is valid and unique, create a new student object\n    const newStudent = {\n      name: newStudentName,\n      email: newStudentEmail\n    };\n\n    // Add the new student to the students array and update the state\n    setStudents([...students, newStudent]);\n\n    // Clear the input fields\n    setNewStudentName('');\n    setNewStudentEmail('');\n\n    // Clear any previous error message\n    setMessage('');\n  };\n  const handleDeleteStudent = studentId => {\n    const student = students.find(student => student.id === studentId);\n    if (!student) {\n      setMessage('Student not found');\n      return;\n    }\n    if (student.enrollments && student.enrollments.length > 0) {\n      const confirmMessage = `This student has ${student.enrollments.length} enrollments. Are you sure you want to delete them?`;\n      if (window.confirm(confirmMessage)) {\n        // Pass the \"force\" parameter when deleting\n        deleteStudent(studentId, 'force');\n      }\n    } else {\n      // No enrollments, delete without \"force\" parameter\n      deleteStudent(studentId);\n    }\n  };\n  const deleteStudent = studentId => {\n    const endpoint = `http://localhost:8080//students?student_id + ${studentId}`;\n    console.log(\"Deleting student with ID:\", studentId);\n    fetch(endpoint, {\n      method: 'DELETE'\n    }).then(response => {\n      console.log(\"Delete response:\", response);\n      if (response.ok) {\n        const updatedStudents = students.filter(student => student.studentId !== studentId);\n        setStudents(updatedStudents);\n      } else {\n        setMessage('Failed to delete student');\n      }\n    }).catch(err => {\n      console.log(\"exception deleteStudent \" + err);\n      setMessage(\"Exception. \" + err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Student List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => fetchStudents(),\n        children: \"Get\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: students.map((student, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [student.name, \" - \", student.email, /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleDeleteStudent(parseInt(student.id)),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Student Name\",\n        value: newStudentName,\n        onChange: e => setNewStudentName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Student Email\",\n        value: newStudentEmail,\n        onChange: e => setNewStudentEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleAddStudent,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminHome, \"NlklMrcKtdjX8kHM/5RCdXIVVZo=\");\n_c = AdminHome;\nexport default AdminHome;\nvar _c;\n$RefreshReg$(_c, \"AdminHome\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AdminHome","_s","students","setStudents","newStudentName","setNewStudentName","newStudentEmail","setNewStudentEmail","message","setMessage","selectedStudentId","setSelectedStudentId","fetchStudents","studentId","endpoint","fetch","then","response","json","data","catch","err","console","log","handleAddStudent","emailRegex","test","isEmailUnique","every","student","email","newStudent","name","handleDeleteStudent","find","id","enrollments","length","confirmMessage","window","confirm","deleteStudent","method","ok","updatedStudents","filter","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","map","index","parseInt","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/nikolaslopez/frontend/src/components/AdminHome.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst AdminHome = () => {\n    const [students, setStudents] = useState([]);\n    const [newStudentName, setNewStudentName] = useState('');\n    const [newStudentEmail, setNewStudentEmail] = useState('');\n    const [message, setMessage] = useState('');\n    const [selectedStudentId, setSelectedStudentId] = useState(null);\n\n    useEffect(() => {\n        // Called once after initial render\n        fetchStudents();\n    }, []);\n\n    const fetchStudents = (studentId) => {\n        const endpoint = `http://localhost:8080/student?studentId=${studentId}`;\n\n        fetch(endpoint)\n            .then((response) => response.json())\n            .then((data) => {\n                setStudents(data); // Update the state with the fetched data\n            })\n            .catch((err) => {\n                console.log(\"exception fetchStudents \" + err);\n                // Handle the error here, for example, by displaying an error message to the user.\n                // You might have a function like setMessage to handle this.\n                setMessage(\"Exception. \" + err);\n            });\n    };\n\n    const handleAddStudent = () => {\n        // Validate the email format\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        if (!emailRegex.test(newStudentEmail)) {\n            setMessage('Invalid email format');\n            return;\n        }\n\n        // Check if the email is unique\n        const isEmailUnique = students.every((student) => student.email !== newStudentEmail);\n\n        if (!isEmailUnique) {\n            setMessage('Email already exists');\n            return;\n        }\n\n        // If email is valid and unique, create a new student object\n        const newStudent = {\n            name: newStudentName,\n            email: newStudentEmail,\n        };\n\n        // Add the new student to the students array and update the state\n        setStudents([...students, newStudent]);\n\n        // Clear the input fields\n        setNewStudentName('');\n        setNewStudentEmail('');\n\n        // Clear any previous error message\n        setMessage('');\n    };\n\n    const handleDeleteStudent = (studentId) => {\n      const student = students.find((student) => student.id === studentId);\n\n      if (!student) {\n          setMessage('Student not found');\n          return;\n      }\n\n      if (student.enrollments && student.enrollments.length > 0) {\n          const confirmMessage = `This student has ${student.enrollments.length} enrollments. Are you sure you want to delete them?`;\n\n          if (window.confirm(confirmMessage)) {\n              // Pass the \"force\" parameter when deleting\n              deleteStudent(studentId, 'force');\n          }\n      } else {\n          // No enrollments, delete without \"force\" parameter\n          deleteStudent(studentId);\n      }\n  };\n\n   const deleteStudent = (studentId) => {\n        const endpoint = `http://localhost:8080//students?student_id + ${studentId}`;\n\n        console.log(\"Deleting student with ID:\", studentId);\n\n        fetch(endpoint, { method: 'DELETE' })\n            .then((response) => {\n                console.log(\"Delete response:\", response);\n                if (response.ok) {\n                    const updatedStudents = students.filter((student) => student.studentId !== studentId);\n                    setStudents(updatedStudents);\n                } else {\n                    setMessage('Failed to delete student');\n                }\n            })\n            .catch((err) => {\n                console.log(\"exception deleteStudent \" + err);\n                setMessage(\"Exception. \" + err);\n            });\n    };\n    return (\n        <div>\n            <div style={{ textAlign: 'center' }}>\n                <h3>Student List</h3>\n                <button type=\"button\" onClick={() => fetchStudents()}>\n                    Get\n                </button>\n            </div>\n\n            {/* Display the list of students */}\n            <ul>\n                {students.map((student, index) => (\n                    <li key={index}>\n                        {student.name} - {student.email}\n                        <button type=\"button\" onClick={() => handleDeleteStudent(parseInt(student.id))}>Delete</button>\n                    </li>\n                ))}\n            </ul>\n\n            <div>\n                <h3>Add Student</h3>\n                <input\n                    type=\"text\"\n                    placeholder=\"Student Name\"\n                    value={newStudentName}\n                    onChange={(e) => setNewStudentName(e.target.value)}\n                />\n                <input\n                    type=\"email\"\n                    placeholder=\"Student Email\"\n                    value={newStudentEmail}\n                    onChange={(e) => setNewStudentEmail(e.target.value)}\n                />\n                <button type=\"button\" onClick={handleAddStudent}>\n                    Add\n                </button>\n            </div>\n\n            {message && <div>{message}</div>}\n        </div>\n    );\n};\n\nexport default AdminHome;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}