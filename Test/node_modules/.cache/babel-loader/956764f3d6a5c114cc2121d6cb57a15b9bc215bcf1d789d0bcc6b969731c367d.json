{"ast":null,"code":"var _jsxFileName = \"/Users/nikolaslopez/frontend/src/components/AdminHome.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport EditStudent from './EditStudent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminHome = () => {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [newStudentName, setNewStudentName] = useState('');\n  const [newStudentEmail, setNewStudentEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [editedStudent, setEditedStudent] = useState(null);\n  useEffect(() => {\n    fetchStudents();\n  }, []);\n  const fetchStudents = () => {\n    const endpoint = 'http://localhost:8080/student';\n    fetch(endpoint).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch students');\n      }\n      return response.json();\n    }).then(data => {\n      setStudents(data);\n    }).catch(err => {\n      console.error('Error fetching students:', err.message);\n      setMessage('Failed to fetch students. ' + err.message);\n    });\n  };\n  const handleAddStudent = () => {\n    const emailFormat = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n    if (!emailFormat.test(newStudentEmail)) {\n      setMessage('Must be a Valid Email');\n      return;\n    }\n    if (students.some(student => student.email === newStudentEmail)) {\n      setMessage('Email Already in Use');\n      return;\n    }\n    const nextStudentId = students.length + 1;\n    const newStudent = {\n      studentId: nextStudentId,\n      name: newStudentName,\n      email: newStudentEmail,\n      statusCode: 0,\n      // Set an appropriate value for statusCode if needed\n      status: 'Pending' // Set an appropriate value for status if needed\n    };\n\n    setStudents([...students, newStudent]);\n\n    // Clear the input fields\n    setNewStudentName('');\n    setNewStudentEmail('');\n\n    // Clear any previous error message\n    setMessage('');\n  };\n  const handleDeleteStudent = studentId => {\n    const studentIndex = students.findIndex(student => student.studentId === studentId);\n    const updatedStudents = [...students.slice(0, studentIndex), ...students.slice(studentIndex + 1)];\n    setStudents(updatedStudents);\n    setMessage('');\n  };\n  const handleEditStudent = student => {\n    setEditedStudent(student);\n  };\n  const handleEditSubmit = editedStudentData => {\n    // Handle the submission of edited student data here, e.g., send it to an API or update it in your state\n    console.log('Updated Student Data:', editedStudentData);\n\n    // Find the index of the edited student in the students array\n    const index = students.findIndex(student => student.studentId === editedStudentData.studentId);\n    if (index !== -1) {\n      // Create a new array with the edited student data\n      const updatedStudents = [...students];\n      updatedStudents[index] = editedStudentData;\n\n      // Update the students state with the new array\n      setStudents(updatedStudents);\n    }\n\n    // You can also close the edit form if needed\n    setEditedStudent(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Student List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: students.map((student, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [student.name, \" - \", student.email, /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleDeleteStudent(student.studentId),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleEditStudent(student),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add Student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Student Name\",\n      value: newStudentName,\n      onChange: e => setNewStudentName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Student Email\",\n      value: newStudentEmail,\n      onChange: e => setNewStudentEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleAddStudent,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), editedStudent && /*#__PURE__*/_jsxDEV(EditStudent, {\n      student: editedStudent,\n      onCancel: () => setEditedStudent(null),\n      onEdit: handleEditSubmit,\n      onDelete: handleDeleteStudent // Pass the onDelete function\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 3\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminHome, \"+zShtihA14xLsLJtuJ1Ysf65e3k=\");\n_c = AdminHome;\nexport default AdminHome;\nvar _c;\n$RefreshReg$(_c, \"AdminHome\");","map":{"version":3,"names":["React","useState","useEffect","EditStudent","jsxDEV","_jsxDEV","AdminHome","_s","students","setStudents","newStudentName","setNewStudentName","newStudentEmail","setNewStudentEmail","message","setMessage","editedStudent","setEditedStudent","fetchStudents","endpoint","fetch","then","response","ok","Error","json","data","catch","err","console","error","handleAddStudent","emailFormat","test","some","student","email","nextStudentId","length","newStudent","studentId","name","statusCode","status","handleDeleteStudent","studentIndex","findIndex","updatedStudents","slice","handleEditStudent","handleEditSubmit","editedStudentData","log","index","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","onClick","placeholder","value","onChange","e","target","onCancel","onEdit","onDelete","_c","$RefreshReg$"],"sources":["/Users/nikolaslopez/frontend/src/components/AdminHome.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport EditStudent from './EditStudent';\n\nconst AdminHome = () => {\n  const [students, setStudents] = useState([]);\n  const [newStudentName, setNewStudentName] = useState('');\n  const [newStudentEmail, setNewStudentEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [editedStudent, setEditedStudent] = useState(null);\n\n  useEffect(() => {\n    fetchStudents();\n  }, []);\n\n  const fetchStudents = () => {\n    const endpoint = 'http://localhost:8080/student';\n\n    fetch(endpoint)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Failed to fetch students');\n        }\n        return response.json();\n      })\n      .then((data) => {\n        setStudents(data);\n      })\n      .catch((err) => {\n        console.error('Error fetching students:', err.message);\n        setMessage('Failed to fetch students. ' + err.message);\n      });\n  };\n\n  const handleAddStudent = () => {\n    const emailFormat = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n\n    if (!emailFormat.test(newStudentEmail)) {\n      setMessage('Must be a Valid Email');\n      return;\n    }\n\n    if (students.some((student) => student.email === newStudentEmail)) {\n      setMessage('Email Already in Use');\n      return;\n    }\n\n    const nextStudentId = students.length + 1;\n\n    const newStudent = {\n      studentId: nextStudentId,\n      name: newStudentName,\n      email: newStudentEmail,\n      statusCode: 0, // Set an appropriate value for statusCode if needed\n      status: 'Pending', // Set an appropriate value for status if needed\n    };\n\n    setStudents([...students, newStudent]);\n\n    // Clear the input fields\n    setNewStudentName('');\n    setNewStudentEmail('');\n\n    // Clear any previous error message\n    setMessage('');\n  };\n\n  const handleDeleteStudent = (studentId) => {\n    const studentIndex = students.findIndex((student) => student.studentId === studentId);\n    const updatedStudents = [...students.slice(0, studentIndex), ...students.slice(studentIndex + 1)];\n  \n    setStudents(updatedStudents);\n    setMessage('');\n  };\n  \n\n  const handleEditStudent = (student) => {\n    setEditedStudent(student);\n  };\n\n  const handleEditSubmit = (editedStudentData) => {\n    // Handle the submission of edited student data here, e.g., send it to an API or update it in your state\n    console.log('Updated Student Data:', editedStudentData);\n\n    // Find the index of the edited student in the students array\n    const index = students.findIndex((student) => student.studentId === editedStudentData.studentId);\n\n    if (index !== -1) {\n      // Create a new array with the edited student data\n      const updatedStudents = [...students];\n      updatedStudents[index] = editedStudentData;\n\n      // Update the students state with the new array\n      setStudents(updatedStudents);\n    }\n\n    // You can also close the edit form if needed\n    setEditedStudent(null);\n  };\n\n  return (\n    <div>\n      <h3>Student List</h3>\n      <ul>\n        {students.map((student, index) => (\n          <li key={index}>\n            {student.name} - {student.email}\n            <button type=\"button\" onClick={() => handleDeleteStudent(student.studentId)}>\n              Delete\n            </button>\n            <button type=\"button\" onClick={() => handleEditStudent(student)}>\n              Edit\n            </button>\n          </li>\n        ))}\n      </ul>\n\n      <h3>Add Student</h3>\n      <input\n        type=\"text\"\n        placeholder=\"Student Name\"\n        value={newStudentName}\n        onChange={(e) => setNewStudentName(e.target.value)}\n      />\n      <input\n        type=\"email\"\n        placeholder=\"Student Email\"\n        value={newStudentEmail}\n        onChange={(e) => setNewStudentEmail(e.target.value)}\n      />\n      <button type=\"button\" onClick={handleAddStudent}>\n        Add\n      </button>\n\n      {editedStudent && (\n  <EditStudent\n    student={editedStudent}\n    onCancel={() => setEditedStudent(null)}\n    onEdit={handleEditSubmit}\n    onDelete={handleDeleteStudent} // Pass the onDelete function\n  />\n)}\n\n\n      {message && <div>{message}</div>}\n    </div>\n  );\n};\n\nexport default AdminHome;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}