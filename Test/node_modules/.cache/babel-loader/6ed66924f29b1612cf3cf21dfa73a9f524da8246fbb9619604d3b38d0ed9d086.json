{"ast":null,"code":"var _jsxFileName = \"/Users/nikolaslopez/frontend/src/components/AdminHome.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport EditStudent from './EditStudent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminHome = () => {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [newStudentName, setNewStudentName] = useState('');\n  const [newStudentEmail, setNewStudentEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [selectedStudentId, setSelectedStudentId] = useState(null);\n  const [showEditStudent, setShowEditStudent] = useState(false);\n  useEffect(() => {\n    fetchStudents();\n  }, []);\n  const handleEditStudent = student => {\n    setSelectedStudent(student);\n  };\n  const headers = [' ', 'Year', 'Semester'];\n  const fetchStudents = studentId => {\n    const endpoint = `http://localhost:8080/student`;\n    fetch(endpoint).then(response => response.json()).then(data => {\n      setStudents(data);\n    }).catch(err => {\n      console.log(\"exception fetchStudents \" + err);\n      setMessage(\"Exception. \" + err);\n    });\n  };\n  const handleAddStudent = () => {\n    const emailFormat = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailFormat.test(newStudentEmail)) {\n      setMessage('Must be Valid Email');\n      return;\n    }\n    if (!students.every(student => student.email !== newStudentEmail)) {\n      setMessage('Email Already in Use');\n      return;\n    }\n    const nextStudentId = students.length + 1;\n    const newStudent = {\n      studentId: nextStudentId,\n      name: newStudentName,\n      email: newStudentEmail,\n      statusCode: 0,\n      status: null\n    };\n    setStudents([...students, newStudent]);\n    //Clear Everything\n    setNewStudentName('');\n    setNewStudentEmail('');\n    setMessage('');\n  };\n  const handleDeleteStudent = studentId => {\n    const student = students.find(student => student.id === studentId);\n    if (!student) {\n      setMessage('Student not found');\n      return;\n    }\n    if (student.enrollments && student.enrollments.length > 0) {\n      const confirmMessage = `This student has ${student.enrollments.length} enrollments. Are you sure you want to delete them?`;\n      if (window.confirm(confirmMessage)) {\n        // Pass the \"force\" parameter when deleting\n        deleteStudent(studentId, 'force');\n      }\n    } else {\n      // No enrollments, delete without \"force\" parameter\n      deleteStudent(studentId);\n    }\n  };\n  const deleteStudent = studentId => {\n    const endpoint = `http://localhost:8080/student/${studentId}`;\n    console.log(\"Deleting student with ID:\", studentId);\n    fetch(endpoint, {\n      method: 'DELETE'\n    }).then(response => {\n      console.log(\"Delete response:\", response);\n      if (response.ok) {\n        const updatedStudents = students.filter(student => student.studentId !== studentId);\n        setStudents(updatedStudents);\n      } else {\n        setMessage('Failed to delete student');\n      }\n    }).catch(err => {\n      console.log(\"exception deleteStudent \" + err);\n      setMessage(\"Exception. \" + err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Student List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => fetchStudents(),\n        children: \"Get\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: students.map((student, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [student.name, \" - \", student.email, /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleDeleteStudent(parseInt(student.id)),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => handleEditStudent(student),\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Student Name\",\n        value: newStudentName,\n        onChange: e => setNewStudentName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Student Email\",\n        value: newStudentEmail,\n        onChange: e => setNewStudentEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleAddStudent,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminHome, \"XZ9+aRqHuuCWkaq/G2W0Yhlb5iE=\");\n_c = AdminHome;\nexport default AdminHome;\nvar _c;\n$RefreshReg$(_c, \"AdminHome\");","map":{"version":3,"names":["React","useState","useEffect","EditStudent","jsxDEV","_jsxDEV","AdminHome","_s","students","setStudents","newStudentName","setNewStudentName","newStudentEmail","setNewStudentEmail","message","setMessage","selectedStudentId","setSelectedStudentId","showEditStudent","setShowEditStudent","fetchStudents","handleEditStudent","student","setSelectedStudent","headers","studentId","endpoint","fetch","then","response","json","data","catch","err","console","log","handleAddStudent","emailFormat","test","every","email","nextStudentId","length","newStudent","name","statusCode","status","handleDeleteStudent","find","id","enrollments","confirmMessage","window","confirm","deleteStudent","method","ok","updatedStudents","filter","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","map","index","parseInt","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/nikolaslopez/frontend/src/components/AdminHome.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport EditStudent from './EditStudent'; \n\nconst AdminHome = () => {\n    const [students, setStudents] = useState([]);\n    const [newStudentName, setNewStudentName] = useState('');\n    const [newStudentEmail, setNewStudentEmail] = useState('');\n    const [message, setMessage] = useState('');\n    const [selectedStudentId, setSelectedStudentId] = useState(null);\n    const [showEditStudent, setShowEditStudent] = useState(false);\n\n    useEffect(() => {\n\n        fetchStudents();\n    }, []);\n    const handleEditStudent = (student) => {\n      setSelectedStudent(student);\n    };\n    \n  const headers = [' ', 'Year', 'Semester'];\n\n    const fetchStudents = (studentId) => {\n        const endpoint = `http://localhost:8080/student`;\n\n        fetch(endpoint)\n            .then((response) => response.json())\n            .then((data) => {\n                setStudents(data); \n            })\n            .catch((err) => {\n                console.log(\"exception fetchStudents \" + err);\n          \n                setMessage(\"Exception. \" + err);\n            });\n    };\n\n    const handleAddStudent = () => {\n        const emailFormat = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        if (!emailFormat.test(newStudentEmail)) {\n            setMessage('Must be Valid Email');\n            return;\n        }\n\n\n        if (!students.every((student) => student.email !== newStudentEmail)) {\n            setMessage('Email Already in Use');\n            return;\n        }\n\n        const nextStudentId = students.length + 1;\n\n        const newStudent = {\n            studentId: nextStudentId,\n            name: newStudentName,\n            email: newStudentEmail,\n            statusCode: 0, \n            status: null, \n        };\n        \n\n        setStudents([...students, newStudent]);\n        //Clear Everything\n        setNewStudentName('');\n        setNewStudentEmail('');\n        setMessage('');\n    };\n\n    const handleDeleteStudent = (studentId) => {\n      const student = students.find((student) => student.id === studentId);\n\n      if (!student) {\n          setMessage('Student not found');\n          return;\n      }\n\n      if (student.enrollments && student.enrollments.length > 0) {\n          const confirmMessage = `This student has ${student.enrollments.length} enrollments. Are you sure you want to delete them?`;\n\n          if (window.confirm(confirmMessage)) {\n              // Pass the \"force\" parameter when deleting\n              deleteStudent(studentId, 'force');\n          }\n      } else {\n          // No enrollments, delete without \"force\" parameter\n          deleteStudent(studentId);\n      }\n  };\n\n  const deleteStudent = (studentId) => {\n    const endpoint = `http://localhost:8080/student/${studentId}`;\n\n    console.log(\"Deleting student with ID:\", studentId);\n\n    fetch(endpoint, { method: 'DELETE' })\n        .then((response) => {\n            console.log(\"Delete response:\", response);\n            if (response.ok) {\n                const updatedStudents = students.filter((student) => student.studentId !== studentId);\n                setStudents(updatedStudents);\n            } else {\n                setMessage('Failed to delete student');\n            }\n        })\n        .catch((err) => {\n            console.log(\"exception deleteStudent \" + err);\n            setMessage(\"Exception. \" + err);\n        });\n};\n\n    return (\n        <div>\n            <div style={{ textAlign: 'center' }}>\n                <h3>Student List</h3>\n                <button type=\"button\" onClick={() => fetchStudents()}>\n                    Get\n                </button>\n            </div>\n\n            {/* Display the list of students */}\n            <ul>\n                {students.map((student, index) => (\n                    <li key={index}>\n                        {student.name} - {student.email}\n                        <button type=\"button\" onClick={() => handleDeleteStudent(parseInt(student.id))}>Delete</button>\n                    </li>\n                ))}\n            </ul>\n            <button\n        type=\"button\"\n        onClick={() => handleEditStudent(student)}\n      >\n        Edit\n      </button>\n\n            <div>\n                <h3>Add Student</h3>\n                <input\n                    type=\"text\"\n                    placeholder=\"Student Name\"\n                    value={newStudentName}\n                    onChange={(e) => setNewStudentName(e.target.value)}\n                />\n                <input\n                    type=\"email\"\n                    placeholder=\"Student Email\"\n                    value={newStudentEmail}\n                    onChange={(e) => setNewStudentEmail(e.target.value)}\n                />\n                <button type=\"button\" onClick={handleAddStudent}>\n                    Add\n                </button>\n            </div>\n\n            {message && <div>{message}</div>}\n        </div>\n    );\n};\n\nexport default AdminHome;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}