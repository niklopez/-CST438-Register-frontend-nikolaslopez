{"ast":null,"code":"var _jsxFileName = \"/Users/nikolaslopez/frontend/src/components/SearchRecipe.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchRecipe(props) {\n  _s();\n  const [open, setOpen] = useState(false);\n  const [recipes, setRecipes] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleSearch = () => {\n    // Fetch recipes from the MealDB API based on the search term\n    fetch(`https://www.themealdb.com/api/json/v1/1/search.php?s=${searchTerm}`).then(response => response.json()).then(data => {\n      // Update the recipes state with the fetched data\n      setRecipes(data.meals);\n    }).catch(error => {\n      console.error('Error fetching recipes:', error);\n    });\n  };\n  const handleTitleChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  useEffect(() => {\n    // Fetch and display random recipes when the component mounts\n    fetch('https://www.themealdb.com/api/json/v1/1/random.php').then(response => response.json()).then(data => {\n      setRecipes(data.meals);\n    }).catch(error => {\n      console.error('Error fetching random recipes:', error);\n    });\n  }, []); // Empty dependency array to run this effect only once when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      id: \"searchRecipe\",\n      variant: \"outlined\",\n      color: \"primary\",\n      style: {\n        margin: 10\n      },\n      onClick: handleClickOpen,\n      children: \"Search Recipe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Search Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        style: {\n          paddingTop: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"searchTerm\",\n          autoFocus: true,\n          fullWidth: true,\n          label: \"Search Term\",\n          name: \"searchTerm\",\n          value: searchTerm,\n          onChange: handleTitleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          id: \"search\",\n          color: \"primary\",\n          onClick: handleSearch,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), recipes.map(recipe => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: recipe.strMeal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, recipe.idMeal, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n// required property:  addCourse is a function to call to perform the Add action\n_s(SearchRecipe, \"ZMPrt6iZttDltXIfi/+TR9waPPc=\");\n_c = SearchRecipe;\nSearchRecipe.propTypes = {\n  addCourse: PropTypes.func.isRequired\n};\nexport default SearchRecipe;\nvar _c;\n$RefreshReg$(_c, \"SearchRecipe\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","Dialog","DialogActions","DialogContent","DialogTitle","Button","TextField","jsxDEV","_jsxDEV","SearchRecipe","props","_s","open","setOpen","recipes","setRecipes","searchTerm","setSearchTerm","handleClickOpen","handleClose","handleSearch","fetch","then","response","json","data","meals","catch","error","console","handleTitleChange","event","target","value","children","id","variant","color","style","margin","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onClose","paddingTop","autoFocus","fullWidth","label","name","onChange","map","recipe","strMeal","idMeal","_c","propTypes","addCourse","func","isRequired","$RefreshReg$"],"sources":["/Users/nikolaslopez/frontend/src/components/SearchRecipe.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\n\nfunction SearchRecipe(props) {\n  const [open, setOpen] = useState(false);\n  const [recipes, setRecipes] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSearch = () => {\n    // Fetch recipes from the MealDB API based on the search term\n    fetch(`https://www.themealdb.com/api/json/v1/1/search.php?s=${searchTerm}`)\n      .then((response) => response.json())\n      .then((data) => {\n        // Update the recipes state with the fetched data\n        setRecipes(data.meals);\n      })\n      .catch((error) => {\n        console.error('Error fetching recipes:', error);\n      });\n  };\n\n  const handleTitleChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  useEffect(() => {\n    // Fetch and display random recipes when the component mounts\n    fetch('https://www.themealdb.com/api/json/v1/1/random.php')\n      .then((response) => response.json())\n      .then((data) => {\n        setRecipes(data.meals);\n      })\n      .catch((error) => {\n        console.error('Error fetching random recipes:', error);\n      });\n  }, []); // Empty dependency array to run this effect only once when the component mounts\n\n  return (\n    <div>\n      <Button\n        id=\"searchRecipe\"\n        variant=\"outlined\"\n        color=\"primary\"\n        style={{ margin: 10 }}\n        onClick={handleClickOpen}\n      >\n        Search Recipe\n      </Button>\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Search Recipe</DialogTitle>\n        <DialogContent style={{ paddingTop: 20 }}>\n          <TextField\n            id=\"searchTerm\"\n            autoFocus\n            fullWidth\n            label=\"Search Term\"\n            name=\"searchTerm\"\n            value={searchTerm}\n            onChange={handleTitleChange}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button color=\"secondary\" onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button id=\"search\" color=\"primary\" onClick={handleSearch}>\n            Search\n          </Button>\n        </DialogActions>\n        {/* Display the fetched recipes */}\n        {recipes.map((recipe) => (\n          <div key={recipe.idMeal}>\n            <p>{recipe.strMeal}</p>\n            {/* Add other recipe details */}\n          </div>\n        ))}\n      </Dialog>\n    </div>\n  );\n}\n\n// required property:  addCourse is a function to call to perform the Add action\nSearchRecipe.propTypes = {\n  addCourse: PropTypes.func.isRequired,\n};\n\nexport default SearchRecipe;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}