{"ast":null,"code":"var _jsxFileName = \"/Users/nikolaslopez/frontend/src/components/AdminHome.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AddCourse from './AddCourse';\nimport { SERVER_URL, SEMESTERS } from '../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminHome = () => {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [newStudentName, setNewStudentName] = useState('');\n  const [newStudentEmail, setNewStudentEmail] = useState('');\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    // Called once after initial render\n    fetchStudents();\n  }, []);\n  const fetchStudents = studentId => {\n    // Replace 'http://localhost:8080/students' with your actual endpoint\n    const endpoint = `http://localhost:8080/students?studentId=${studentId}`;\n    fetch(endpoint).then(response => response.json()).then(data => {\n      setStudents(data); // Update the state with the fetched data\n    }).catch(err => {\n      console.log(\"exception fetchStudents \" + err);\n      // Handle the error here, for example, by displaying an error message to the user.\n      // You might have a function like setMessage to handle this.\n      setMessage(\"Exception. \" + err);\n    });\n  };\n  const handleAddStudent = () => {\n    // Validate the email format\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(newStudentEmail)) {\n      setMessage('Invalid email format');\n      return;\n    }\n\n    // Check if the email is unique\n    const isEmailUnique = students.every(student => student.email !== newStudentEmail);\n    if (!isEmailUnique) {\n      setMessage('Email already exists');\n      return;\n    }\n\n    // If email is valid and unique, create a new student object\n    const newStudent = {\n      name: newStudentName,\n      email: newStudentEmail\n    };\n\n    // Add the new student to the students array and update the state\n    setStudents([...students, newStudent]);\n\n    // Clear the input fields\n    setNewStudentName('');\n    setNewStudentEmail('');\n\n    // Clear any previous error message\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Student List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => fetchStudents(),\n        children: \"Get\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: students.map((student, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [student.name, \" - \", student.email]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Student Name\",\n        value: newStudentName,\n        onChange: e => setNewStudentName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Student Email\",\n        value: newStudentEmail,\n        onChange: e => setNewStudentEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleAddStudent,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminHome, \"KjxvRw3fmthovEBH9YweHI/VysA=\");\n_c = AdminHome;\nexport default AdminHome;\nvar _c;\n$RefreshReg$(_c, \"AdminHome\");","map":{"version":3,"names":["React","useState","useEffect","AddCourse","SERVER_URL","SEMESTERS","jsxDEV","_jsxDEV","AdminHome","_s","students","setStudents","newStudentName","setNewStudentName","newStudentEmail","setNewStudentEmail","message","setMessage","fetchStudents","studentId","endpoint","fetch","then","response","json","data","catch","err","console","log","handleAddStudent","emailRegex","test","isEmailUnique","every","student","email","newStudent","name","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","map","index","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/nikolaslopez/frontend/src/components/AdminHome.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport AddCourse from './AddCourse';\nimport { SERVER_URL, SEMESTERS } from '../constants';\n\nconst AdminHome = () => {\n    const [students, setStudents] = useState([]);\n    const [newStudentName, setNewStudentName] = useState('');\n    const [newStudentEmail, setNewStudentEmail] = useState('');\n    const [message, setMessage] = useState('');\n\n    useEffect(() => {\n        // Called once after initial render\n        fetchStudents();\n    }, []);\n\n    const fetchStudents = (studentId) => {\n        // Replace 'http://localhost:8080/students' with your actual endpoint\n        const endpoint = `http://localhost:8080/students?studentId=${studentId}`;\n\n        fetch(endpoint)\n            .then((response) => response.json())\n            .then((data) => {\n                setStudents(data); // Update the state with the fetched data\n            })\n            .catch((err) => {\n                console.log(\"exception fetchStudents \" + err);\n                // Handle the error here, for example, by displaying an error message to the user.\n                // You might have a function like setMessage to handle this.\n                setMessage(\"Exception. \" + err);\n            });\n    };\n\n    const handleAddStudent = () => {\n        // Validate the email format\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        if (!emailRegex.test(newStudentEmail)) {\n            setMessage('Invalid email format');\n            return;\n        }\n\n        // Check if the email is unique\n        const isEmailUnique = students.every((student) => student.email !== newStudentEmail);\n\n        if (!isEmailUnique) {\n            setMessage('Email already exists');\n            return;\n        }\n\n        // If email is valid and unique, create a new student object\n        const newStudent = {\n            name: newStudentName,\n            email: newStudentEmail,\n        };\n\n        // Add the new student to the students array and update the state\n        setStudents([...students, newStudent]);\n\n        // Clear the input fields\n        setNewStudentName('');\n        setNewStudentEmail('');\n\n        // Clear any previous error message\n        setMessage('');\n    };\n\n    return (\n        <div>\n            <div style={{ textAlign: 'center' }}>\n                <h3>Student List</h3>\n                <button type=\"button\" onClick={() => fetchStudents()}>\n                    Get\n                </button>\n            </div>\n\n            {/* Display the list of students */}\n            <ul>\n                {students.map((student, index) => (\n                    <li key={index}>{student.name} - {student.email}</li>\n                ))}\n            </ul>\n\n            <div>\n                <h3>Add Student</h3>\n                <input\n                    type=\"text\"\n                    placeholder=\"Student Name\"\n                    value={newStudentName}\n                    onChange={(e) => setNewStudentName(e.target.value)}\n                />\n                <input\n                    type=\"email\"\n                    placeholder=\"Student Email\"\n                    value={newStudentEmail}\n                    onChange={(e) => setNewStudentEmail(e.target.value)}\n                />\n                <button type=\"button\" onClick={handleAddStudent}>\n                    Add\n                </button>\n            </div>\n            \n            {message && <div>{message}</div>}\n        </div>\n    );\n};\n\nexport default AdminHome;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}