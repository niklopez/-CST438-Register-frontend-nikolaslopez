{"ast":null,"code":"var _jsxFileName = \"/Users/nikolaslopez/frontend/src/components/AdminHome.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport EditStudent from './EditStudent';\nimport { SERVER_URL } from '../constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminHome = () => {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [newStudentName, setNewStudentName] = useState('');\n  const [newStudentEmail, setNewStudentEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [editedStudent, setEditedStudent] = useState(null);\n  useEffect(() => {\n    fetchStudents();\n  }, []);\n  const fetchStudents = () => {\n    // Use the appropriate URL for fetching students\n    fetch(`${SERVER_URL}/students`).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch students');\n      }\n      return response.json();\n    }).then(data => {\n      setStudents(data);\n    }).catch(err => {\n      console.error('Error fetching students:', err.message);\n      setMessage('Failed to fetch students. ' + err.message);\n    });\n  };\n  const handleAddStudent = () => {\n    const emailFormat = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n    if (!emailFormat.test(newStudentEmail)) {\n      setMessage('Must be a Valid Email');\n      return;\n    }\n    if (students.some(student => student.email === newStudentEmail)) {\n      setMessage('Email Already in Use');\n      return;\n    }\n    const newStudent = {\n      name: newStudentName,\n      email: newStudentEmail\n      // You can set other properties like statusCode and status here\n    };\n\n    // Use the appropriate URL and method (POST) to add a new student\n    fetch(`${SERVER_URL}/students`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newStudent)\n    }).then(response => response.json()).then(data => {\n      setStudents([...students, data]); // Update the state with the newly created student\n      setNewStudentName('');\n      setNewStudentEmail('');\n      setMessage('Student added successfully');\n    }).catch(err => {\n      console.error('Error adding student:', err.message);\n      setMessage('Failed to add student. ' + err.message);\n    });\n  };\n  const handleDeleteStudent = studentId => {\n    // Use the appropriate URL and method (DELETE) to delete a student\n    fetch(`${SERVER_URL}/students/${studentId}`, {\n      method: 'DELETE'\n    }).then(response => {\n      if (response.ok) {\n        console.log('Delete successful');\n        setStudents(students.filter(student => student.studentId !== studentId));\n        setMessage('Student deleted.');\n      } else {\n        console.log('Delete error:', response.status);\n        setMessage('Error deleting student. ' + response.status);\n      }\n    }).catch(err => {\n      console.error('Exception:', err);\n      setMessage('Exception. ' + err.message);\n    });\n  };\n  const handleEditStudent = student => {\n    setEditedStudent(student);\n  };\n  const handleEditSubmit = editedStudentData => {\n    // Handle the submission of edited student data here, e.g., send it to an API or update it in your state\n    console.log('Updated Student Data:', editedStudentData);\n\n    // Find the index of the edited student in the students array\n    const index = students.findIndex(student => student.studentId === editedStudentData.studentId);\n    if (index !== -1) {\n      // Create a new array with the edited student data\n      const updatedStudents = [...students];\n      updatedStudents[index] = editedStudentData;\n\n      // Update the students state with the new array\n      setStudents(updatedStudents);\n    }\n\n    // You can also close the edit form if needed\n    setEditedStudent(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Student List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: students.map((student, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [student.name, \" - \", student.email, /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleDeleteStudent(student.studentId),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => handleEditStudent(student),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add Student\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Student Name\",\n      value: newStudentName,\n      onChange: e => setNewStudentName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Student Email\",\n      value: newStudentEmail,\n      onChange: e => setNewStudentEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleAddStudent,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), editedStudent && /*#__PURE__*/_jsxDEV(EditStudent, {\n      student: editedStudent,\n      onCancel: () => setEditedStudent(null),\n      onEdit: handleEditSubmit,\n      onDelete: handleDeleteStudent // Pass the onDelete function\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 3\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminHome, \"+zShtihA14xLsLJtuJ1Ysf65e3k=\");\n_c = AdminHome;\nexport default AdminHome;\nvar _c;\n$RefreshReg$(_c, \"AdminHome\");","map":{"version":3,"names":["React","useState","useEffect","EditStudent","SERVER_URL","jsxDEV","_jsxDEV","AdminHome","_s","students","setStudents","newStudentName","setNewStudentName","newStudentEmail","setNewStudentEmail","message","setMessage","editedStudent","setEditedStudent","fetchStudents","fetch","then","response","ok","Error","json","data","catch","err","console","error","handleAddStudent","emailFormat","test","some","student","email","newStudent","name","method","headers","body","JSON","stringify","handleDeleteStudent","studentId","log","filter","status","handleEditStudent","handleEditSubmit","editedStudentData","index","findIndex","updatedStudents","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","onClick","placeholder","value","onChange","e","target","onCancel","onEdit","onDelete","_c","$RefreshReg$"],"sources":["/Users/nikolaslopez/frontend/src/components/AdminHome.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport EditStudent from './EditStudent';\nimport { SERVER_URL } from '../constants';\n\nconst AdminHome = () => {\n  const [students, setStudents] = useState([]);\n  const [newStudentName, setNewStudentName] = useState('');\n  const [newStudentEmail, setNewStudentEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [editedStudent, setEditedStudent] = useState(null);\n\n  useEffect(() => {\n    fetchStudents();\n  }, []);\n\n  const fetchStudents = () => {\n    // Use the appropriate URL for fetching students\n    fetch(`${SERVER_URL}/students`)\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Failed to fetch students');\n        }\n        return response.json();\n      })\n      .then((data) => {\n        setStudents(data);\n      })\n      .catch((err) => {\n        console.error('Error fetching students:', err.message);\n        setMessage('Failed to fetch students. ' + err.message);\n      });\n  };\n\n  const handleAddStudent = () => {\n    const emailFormat = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n\n    if (!emailFormat.test(newStudentEmail)) {\n      setMessage('Must be a Valid Email');\n      return;\n    }\n\n    if (students.some((student) => student.email === newStudentEmail)) {\n      setMessage('Email Already in Use');\n      return;\n    }\n\n    const newStudent = {\n      name: newStudentName,\n      email: newStudentEmail,\n      // You can set other properties like statusCode and status here\n    };\n\n    // Use the appropriate URL and method (POST) to add a new student\n    fetch(`${SERVER_URL}/students`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(newStudent),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setStudents([...students, data]); // Update the state with the newly created student\n        setNewStudentName('');\n        setNewStudentEmail('');\n        setMessage('Student added successfully');\n      })\n      .catch((err) => {\n        console.error('Error adding student:', err.message);\n        setMessage('Failed to add student. ' + err.message);\n      });\n  };\n\n  const handleDeleteStudent = (studentId) => {\n    // Use the appropriate URL and method (DELETE) to delete a student\n    fetch(`${SERVER_URL}/students/${studentId}`, {\n      method: 'DELETE',\n    })\n      .then((response) => {\n        if (response.ok) {\n          console.log('Delete successful');\n          setStudents(students.filter((student) => student.studentId !== studentId));\n          setMessage('Student deleted.');\n        } else {\n          console.log('Delete error:', response.status);\n          setMessage('Error deleting student. ' + response.status);\n        }\n      })\n      .catch((err) => {\n        console.error('Exception:', err);\n        setMessage('Exception. ' + err.message);\n      });\n  };\n\n  \n  \n\n  const handleEditStudent = (student) => {\n    setEditedStudent(student);\n  };\n\n  const handleEditSubmit = (editedStudentData) => {\n    // Handle the submission of edited student data here, e.g., send it to an API or update it in your state\n    console.log('Updated Student Data:', editedStudentData);\n\n    // Find the index of the edited student in the students array\n    const index = students.findIndex((student) => student.studentId === editedStudentData.studentId);\n\n    if (index !== -1) {\n      // Create a new array with the edited student data\n      const updatedStudents = [...students];\n      updatedStudents[index] = editedStudentData;\n\n      // Update the students state with the new array\n      setStudents(updatedStudents);\n    }\n\n    // You can also close the edit form if needed\n    setEditedStudent(null);\n  };\n\n  return (\n    <div>\n      <h3>Student List</h3>\n      <ul>\n        {students.map((student, index) => (\n          <li key={index}>\n            {student.name} - {student.email}\n            <button type=\"button\" onClick={() => handleDeleteStudent(student.studentId)}>\n              Delete\n            </button>\n            <button type=\"button\" onClick={() => handleEditStudent(student)}>\n              Edit\n            </button>\n          </li>\n        ))}\n      </ul>\n\n      <h3>Add Student</h3>\n      <input\n        type=\"text\"\n        placeholder=\"Student Name\"\n        value={newStudentName}\n        onChange={(e) => setNewStudentName(e.target.value)}\n      />\n      <input\n        type=\"email\"\n        placeholder=\"Student Email\"\n        value={newStudentEmail}\n        onChange={(e) => setNewStudentEmail(e.target.value)}\n      />\n      <button type=\"button\" onClick={handleAddStudent}>\n        Add\n      </button>\n\n      {editedStudent && (\n  <EditStudent\n    student={editedStudent}\n    onCancel={() => setEditedStudent(null)}\n    onEdit={handleEditSubmit}\n    onDelete={handleDeleteStudent} // Pass the onDelete function\n  />\n)}\n\n\n      {message && <div>{message}</div>}\n    </div>\n  );\n};\n\nexport default AdminHome;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}